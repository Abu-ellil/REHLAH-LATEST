import { Ionicons } from '@expo/vector-icons';
import { router, useLocalSearchParams } from 'expo-router';
import React, { useState } from 'react';
import {
    Alert,
    RefreshControl,
    ScrollView,
    StyleSheet,
    TouchableOpacity,
    View
} from 'react-native';

import { ThemedText } from '@/components/ThemedText';
import { ThemedView } from '@/components/ThemedView';
import { useColorScheme } from '@/hooks/useColorScheme';
import { useAppDispatch, useAppSelector } from '@/store/hooks';
import { ุญุฐู_ุฑุญูุฉ } from '@/store/slices/ุฑุญูุงุชSlice';
import { ุญุฐู_ูุตุงุฑูู_ุงูุฑุญูุฉ } from '@/store/slices/ูุตุงุฑููSlice';
import { ุญุณุงุจ_ููุฎุต_ุงูุฑุญูุฉ } from '@/utils/calculations';
import { formatAmount, ุชูุณูู_ุงูุชุงุฑูุฎ } from '@/utils/helpers';

export default function ุดุงุดุฉ_ุชูุงุตูู_ุงูุฑุญูุฉ() {
  const { tripId } = useLocalSearchParams();
  const colorScheme = useColorScheme();
  const dispatch = useAppDispatch();

  const { ุงูุฑุญูุงุช } = useAppSelector(state => state.ุฑุญูุงุช);
  const { ุงููุณุชุฎุฏููู } = useAppSelector(state => state.ูุณุชุฎุฏููู);
  const { ุงููุตุงุฑูู } = useAppSelector(state => state.ูุตุงุฑูู);

  const [ุฌุงุฑู_ุงูุชุญุฏูุซ, ุชุนููู_ุฌุงุฑู_ุงูุชุญุฏูุซ] = useState(false);

  const isDark = colorScheme === 'dark';
  const ุงูุฑุญูุฉ = ุงูุฑุญูุงุช.find(r => r.id === tripId);

  if (!ุงูุฑุญูุฉ) {
    return (
      <ThemedView style={styles.container}>
        <View style={styles.errorContainer}>
          <Ionicons name="alert-circle" size={64} color="#FF3B30" />
          <ThemedText type="subtitle" style={styles.errorTitle}>
            ุงูุฑุญูุฉ ุบูุฑ ููุฌูุฏุฉ
          </ThemedText>
          <TouchableOpacity
            style={[styles.button, { backgroundColor: '#007AFF' }]}
            onPress={() => router.back()}
          >
            <ThemedText style={[styles.buttonText, { color: 'white' }]}>
              ุงูุนูุฏุฉ
            </ThemedText>
          </TouchableOpacity>
        </View>
      </ThemedView>
    );
  }

  // ุญุณุงุจ ููุฎุต ุงูุฑุญูุฉ
  const ููุฎุต_ุงูุฑุญูุฉ = ุญุณุงุจ_ููุฎุต_ุงูุฑุญูุฉ(ุงูุฑุญูุฉ.id, ุงููุตุงุฑูู, ุงููุณุชุฎุฏููู);
  const ูุดุงุฑูู_ุงูุฑุญูุฉ = ุงููุณุชุฎุฏููู.filter(ู => ุงูุฑุญูุฉ.ุงููุดุงุฑููู.includes(ู.id));

  const ุญุฐู_ุงูุฑุญูุฉ_ูุน_ุงูุชุฃููุฏ = () => {
    Alert.alert(
      'ุชุฃููุฏ ุงูุญุฐู',
      'ูู ุฃูุช ูุชุฃูุฏ ูู ุฑุบุจุชู ูู ุญุฐู ูุฐู ุงูุฑุญูุฉุ ุณูุชู ุญุฐู ุฌููุน ุงููุตุงุฑูู ุงููุฑุชุจุทุฉ ุจูุง.',
      [
        { text: 'ุฅูุบุงุก', style: 'cancel' },
        {
          text: 'ุญุฐู',
          style: 'destructive',
          onPress: () => {
            dispatch(ุญุฐู_ูุตุงุฑูู_ุงูุฑุญูุฉ(ุงูุฑุญูุฉ.id));
            dispatch(ุญุฐู_ุฑุญูุฉ(ุงูุฑุญูุฉ.id));
            router.back();
          },
        },
      ]
    );
  };

  const ุฅุถุงูุฉ_ูุตุฑูู = () => {
    router.push(`/add-expense?tripId=${ุงูุฑุญูุฉ.id}`);
  };

  const ุนุฑุถ_ุจุทุงูุฉ_ูุดุงุฑู = (ูุณุชุฎุฏู: any) => {
    const ุฑุตูุฏ_ุงููุณุชุฎุฏู = ููุฎุต_ุงูุฑุญูุฉ.ุฃุฑุตุฏุฉ_ุงููุณุชุฎุฏููู.find(ุฑ => ุฑ.ูุนุฑู_ุงููุณุชุฎุฏู === ูุณุชุฎุฏู.id);
    const ุงููุจูุบ_ุงููุณุชุญู_ุงููุฑุฏู = ุงูุฑุญูุฉ.ุงููุจุงูุบ_ุงููุณุชุญูุฉ_ุงููุฑุฏูุฉ?.[ูุณุชุฎุฏู.id] || 0;
    const ุงููุฏููุน = ุฑุตูุฏ_ุงููุณุชุฎุฏู?.ุฅุฌูุงูู_ุงููุฏููุน || 0;
    const ุงููุตูุจ = ุฑุตูุฏ_ุงููุณุชุฎุฏู?.ุฅุฌูุงูู_ุงููุตูุจ || 0;
    const ุงูุฑุตูุฏ_ุงูุตุงูู = ุฑุตูุฏ_ุงููุณุชุฎุฏู?.ุงูุฑุตูุฏ_ุงูุตุงูู || 0;

    // ุญุณุงุจ ุงููุดุชุฑูุงุช ุงููุฑุฏูุฉ
    const { ุงููุดุชุฑูุงุช } = useAppSelector(state => state.ูุดุชุฑูุงุช);
    const ูุดุชุฑูุงุช_ุงููุณุชุฎุฏู = ุงููุดุชุฑูุงุช.filter(
      ู => ู.ูุนุฑู_ุงูุฑุญูุฉ === ุงูุฑุญูุฉ.id && ู.ูุนุฑู_ุงููุณุชุฎุฏู === ูุณุชุฎุฏู.id
    );
    const ุฅุฌูุงูู_ุงููุดุชุฑูุงุช = ูุดุชุฑูุงุช_ุงููุณุชุฎุฏู.reduce((ูุฌููุน, ู) => ูุฌููุน + ู.ุงููุจูุบ, 0);
    const ุงููุจูุบ_ุงููุชุจูู = ุงููุจูุบ_ุงููุณุชุญู_ุงููุฑุฏู - ุฅุฌูุงูู_ุงููุดุชุฑูุงุช;

    return (
      <View
        key={ูุณุชุฎุฏู.id}
        style={[styles.participantCard, { backgroundColor: isDark ? '#2C2C2E' : '#FFFFFF' }]}
      >
        <View style={styles.participantHeader}>
          <View style={styles.participantInfo}>
            <View style={styles.participantAvatar}>
              <ThemedText style={styles.avatarText}>
                {ูุณุชุฎุฏู.ุงูุตูุฑุฉ_ุงูุฑูุฒูุฉ || '๐ค'}
              </ThemedText>
            </View>
            <View style={styles.participantDetails}>
              <ThemedText type="defaultSemiBold" style={styles.participantName}>
                {ูุณุชุฎุฏู.ุงูุงุณู}
              </ThemedText>
              <View style={styles.balanceInfo}>
                <ThemedText 
                  type="caption" 
                  style={[
                    styles.balanceText,
                    { color: ุงูุฑุตูุฏ_ุงูุตุงูู >= 0 ? '#34C759' : '#FF3B30' }
                  ]}
                >
                  {ุงูุฑุตูุฏ_ุงูุตุงูู >= 0 ? 'ูู' : 'ุนููู'}: {formatAmount(Math.abs(ุงูุฑุตูุฏ_ุงูุตุงูู), ุงูุฑุญูุฉ.ุงูุนููุฉ)}
                </ThemedText>
              </View>
            </View>
          </View>
          <View style={styles.participantActions}>
            <TouchableOpacity
              style={[styles.actionButton, { backgroundColor: '#007AFF' }]}
              onPress={() => router.push(`/individual-purchases?tripId=${ุงูุฑุญูุฉ.id}&userId=${ูุณุชุฎุฏู.id}`)}
            >
              <Ionicons name="bag" size={16} color="white" />
            </TouchableOpacity>
          </View>
        </View>

        <View style={styles.participantDetails}>
          <View style={styles.detailRow}>
            <ThemedText type="caption" style={styles.detailLabel}>
              ุงููุจูุบ ุงููุณุชุญู:
            </ThemedText>
            <ThemedText type="caption" style={styles.detailValue}>
              {formatAmount(ุงููุจูุบ_ุงููุณุชุญู_ุงููุฑุฏู, ุงูุฑุญูุฉ.ุงูุนููุฉ)}
            </ThemedText>
          </View>
          <View style={styles.detailRow}>
            <ThemedText type="caption" style={styles.detailLabel}>
              ุฅุฌูุงูู ุงููุฏููุน:
            </ThemedText>
            <ThemedText type="caption" style={styles.detailValue}>
              {formatAmount(ุงููุฏููุน, ุงูุฑุญูุฉ.ุงูุนููุฉ)}
            </ThemedText>
          </View>
          <View style={styles.detailRow}>
            <ThemedText type="caption" style={styles.detailLabel}>
              ูุตูุจู ูู ุงููุตุงุฑูู:
            </ThemedText>
            <ThemedText type="caption" style={styles.detailValue}>
              {formatAmount(ุงููุตูุจ, ุงูุฑุญูุฉ.ุงูุนููุฉ)}
            </ThemedText>
          </View>
        </View>
      </View>
    );
  };

  const ุนุฑุถ_ูุตุฑูู = (ูุตุฑูู: any) => (
    <TouchableOpacity
      key={ูุตุฑูู.id}
      style={[styles.expenseCard, { backgroundColor: isDark ? '#2C2C2E' : '#FFFFFF' }]}
      onPress={() => router.push(`/expense-details?expenseId=${ูุตุฑูู.id}`)}
    >
      <View style={styles.expenseHeader}>
        <View style={styles.expenseInfo}>
          <ThemedText type="defaultSemiBold" style={styles.expenseTitle}>
            {ูุตุฑูู.ุงูุนููุงู}
          </ThemedText>
          <ThemedText type="caption" style={styles.expenseCategory}>
            {ูุตุฑูู.ุงููุฆุฉ} โข {ุชูุณูู_ุงูุชุงุฑูุฎ(ูุตุฑูู.ุชุงุฑูุฎ_ุงููุตุฑูู)}
          </ThemedText>
        </View>
        <View style={styles.expenseAmount}>
          <ThemedText type="defaultSemiBold" style={styles.amountText}>
            {formatAmount(ูุตุฑูู.ุงููุจูุบ, ุงูุฑุญูุฉ.ุงูุนููุฉ)}
          </ThemedText>
        </View>
      </View>
      {ูุตุฑูู.ุงููุตู && (
        <ThemedText type="caption" style={styles.expenseDescription}>
          {ูุตุฑูู.ุงููุตู}
        </ThemedText>
      )}
    </TouchableOpacity>
  );

  const ูุตุงุฑูู_ุงูุฑุญูุฉ = ุงููุตุงุฑูู.filter(ู => ู.ูุนุฑู_ุงูุฑุญูุฉ === ุงูุฑุญูุฉ.id);

  return (
    <ThemedView style={styles.container}>
      {/* ุงูุฑุฃุณ */}
      <View style={[styles.header, { backgroundColor: isDark ? '#1C1C1E' : '#F2F2F7' }]}>
        <TouchableOpacity
          style={styles.backButton}
          onPress={() => router.back()}
        >
          <Ionicons name="arrow-forward" size={24} color={isDark ? '#FFFFFF' : '#000000'} />
        </TouchableOpacity>
        <ThemedText type="subtitle" style={styles.headerTitle}>
          ุชูุงุตูู ุงูุฑุญูุฉ
        </ThemedText>
        <TouchableOpacity
          style={styles.menuButton}
          onPress={ุญุฐู_ุงูุฑุญูุฉ_ูุน_ุงูุชุฃููุฏ}
        >
          <Ionicons name="trash" size={24} color="#FF3B30" />
        </TouchableOpacity>
      </View>

      <ScrollView
        style={styles.scrollView}
        contentContainerStyle={styles.scrollContent}
        refreshControl={
          <RefreshControl
            refreshing={ุฌุงุฑู_ุงูุชุญุฏูุซ}
            onRefresh={() => {
              ุชุนููู_ุฌุงุฑู_ุงูุชุญุฏูุซ(true);
              setTimeout(() => ุชุนููู_ุฌุงุฑู_ุงูุชุญุฏูุซ(false), 1000);
            }}
            tintColor={isDark ? '#FFFFFF' : '#000000'}
          />
        }
        showsVerticalScrollIndicator={false}
      >
        {/* ูุนูููุงุช ุงูุฑุญูุฉ */}
        <View style={[styles.tripInfoCard, { backgroundColor: isDark ? '#2C2C2E' : '#FFFFFF' }]}>
          <ThemedText type="title" style={styles.tripTitle}>
            {ุงูุฑุญูุฉ.ุงูุงุณู}
          </ThemedText>
          {ุงูุฑุญูุฉ.ุงููุตู && (
            <ThemedText type="default" style={styles.tripDescription}>
              {ุงูุฑุญูุฉ.ุงููุตู}
            </ThemedText>
          )}

          <View style={styles.tripMeta}>
            <View style={styles.metaRow}>
              <Ionicons name="calendar" size={16} color="#666" />
              <ThemedText type="caption" style={styles.metaText}>
                {ุชูุณูู_ุงูุชุงุฑูุฎ(ุงูุฑุญูุฉ.ุชุงุฑูุฎ_ุงูุจุฏุงูุฉ)}
                {ุงูุฑุญูุฉ.ุชุงุฑูุฎ_ุงูููุงูุฉ && ` - ${ุชูุณูู_ุงูุชุงุฑูุฎ(ุงูุฑุญูุฉ.ุชุงุฑูุฎ_ุงูููุงูุฉ)}`}
              </ThemedText>
            </View>
            <View style={styles.metaRow}>
              <Ionicons name="people" size={16} color="#666" />
              <ThemedText type="caption" style={styles.metaText}>
                {ูุดุงุฑูู_ุงูุฑุญูุฉ.length} ูุดุงุฑู
              </ThemedText>
            </View>
            <View style={styles.metaRow}>
              <Ionicons name="wallet" size={16} color="#666" />
              <ThemedText type="caption" style={styles.metaText}>
                ุฅุฌูุงูู ุงููุตุงุฑูู: {formatAmount(ููุฎุต_ุงูุฑุญูุฉ.ุฅุฌูุงูู_ุงููุตุงุฑูู, ุงูุฑุญูุฉ.ุงูุนููุฉ)}
              </ThemedText>
            </View>
          </View>
        </View>

        {/* ุงููุดุงุฑููู */}
        <View style={styles.section}>
          <ThemedText type="subtitle" style={styles.sectionTitle}>
            ุงููุดุงุฑููู ({ูุดุงุฑูู_ุงูุฑุญูุฉ.length})
          </ThemedText>
          <View style={styles.participantsContainer}>
            {ูุดุงุฑูู_ุงูุฑุญูุฉ.map(ุนุฑุถ_ุจุทุงูุฉ_ูุดุงุฑู)}
          </View>
        </View>

        {/* ุงููุตุงุฑูู */}
        <View style={styles.section}>
          <View style={styles.sectionHeader}>
            <ThemedText type="subtitle" style={styles.sectionTitle}>
              ุงููุตุงุฑูู ({ูุตุงุฑูู_ุงูุฑุญูุฉ.length})
            </ThemedText>
            <TouchableOpacity
              style={[styles.addButton, { backgroundColor: '#007AFF' }]}
              onPress={ุฅุถุงูุฉ_ูุตุฑูู}
            >
              <Ionicons name="add" size={20} color="white" />
              <ThemedText style={[styles.addButtonText, { color: 'white' }]}>
                ุฅุถุงูุฉ ูุตุฑูู
              </ThemedText>
            </TouchableOpacity>
          </View>

          {ูุตุงุฑูู_ุงูุฑุญูุฉ.length === 0 ? (
            <View style={styles.emptyState}>
              <Ionicons name="receipt" size={48} color={isDark ? '#666' : '#CCC'} />
              <ThemedText type="caption" style={styles.emptyText}>
                ูุง ุชูุฌุฏ ูุตุงุฑูู ุจุนุฏ
              </ThemedText>
              <ThemedText type="caption" style={styles.emptySubtext}>
                ุงุถุบุท ุนูู "ุฅุถุงูุฉ ูุตุฑูู" ูุจุฏุก ุชุชุจุน ุงููุตุงุฑูู
              </ThemedText>
            </View>
          ) : (
            <View style={styles.expensesContainer}>
              {ูุตุงุฑูู_ุงูุฑุญูุฉ.map(ุนุฑุถ_ูุตุฑูู)}
            </View>
          )}
        </View>

        {/* ุงูุชุณููุงุช ุงููุทููุจุฉ */}
        {ููุฎุต_ุงูุฑุญูุฉ.ุงูุชุณููุงุช_ุงููุทููุจุฉ.length > 0 && (
          <View style={styles.section}>
            <ThemedText type="subtitle" style={styles.sectionTitle}>
              ุงูุชุณููุงุช ุงููุทููุจุฉ
            </ThemedText>
            <View style={[styles.settlementsCard, { backgroundColor: isDark ? '#2C2C2E' : '#FFFFFF' }]}>
              {ููุฎุต_ุงูุฑุญูุฉ.ุงูุชุณููุงุช_ุงููุทููุจุฉ.map((ุชุณููุฉ, ููุฑุณ) => {
                const ูู = ุงููุณุชุฎุฏููู.find(ู => ู.id === ุชุณููุฉ.ูู);
                const ุฅูู = ุงููุณุชุฎุฏููู.find(ู => ู.id === ุชุณููุฉ.ุฅูู);

                return (
                  <View key={ููุฑุณ} style={styles.settlementRow}>
                    <View style={styles.settlementInfo}>
                      <ThemedText type="default" style={styles.settlementText}>
                        {ูู?.ุงูุงุณู} ูุฏูุน ูู {ุฅูู?.ุงูุงุณู}
                      </ThemedText>
                    </View>
                    <ThemedText type="defaultSemiBold" style={styles.settlementAmount}>
                      {formatAmount(ุชุณููุฉ.ุงููุจูุบ, ุงูุฑุญูุฉ.ุงูุนููุฉ)}
                    </ThemedText>
                  </View>
                );
              })}
            </View>
          </View>
        )}

        {/* ุฃุฒุฑุงุฑ ุงูุฅุฌุฑุงุกุงุช */}
        <View style={styles.actionsContainer}>
          <TouchableOpacity
            style={[styles.actionButton, { backgroundColor: '#007AFF' }]}
            onPress={() => router.push(`/edit-trip?tripId=${ุงูุฑุญูุฉ.id}`)}
          >
            <Ionicons name="create" size={20} color="white" />
            <ThemedText style={[styles.actionButtonText, { color: 'white' }]}>
              ุชุนุฏูู ุงูุฑุญูุฉ
            </ThemedText>
          </TouchableOpacity>

          <TouchableOpacity
            style={[styles.actionButton, { backgroundColor: '#34C759' }]}
            onPress={() => router.push(`/trip-analytics?tripId=${ุงูุฑุญูุฉ.id}`)}
          >
            <Ionicons name="analytics" size={20} color="white" />
            <ThemedText style={[styles.actionButtonText, { color: 'white' }]}>
              ุงูุชุญูููุงุช
            </ThemedText>
          </TouchableOpacity>
        </View>
      </ScrollView>
    </ThemedView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingHorizontal: 16,
    paddingVertical: 12,
    paddingTop: 50,
  },
  backButton: {
    padding: 8,
  },
  headerTitle: {
    flex: 1,
    textAlign: 'center',
    marginHorizontal: 16,
  },
  menuButton: {
    padding: 8,
  },
  scrollView: {
    flex: 1,
  },
  scrollContent: {
    padding: 16,
    paddingBottom: 32,
  },
  errorContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    padding: 32,
  },
  errorTitle: {
    marginTop: 16,
    marginBottom: 24,
    textAlign: 'center',
  },
  button: {
    paddingHorizontal: 24,
    paddingVertical: 12,
    borderRadius: 8,
  },
  buttonText: {
    fontWeight: '600',
  },
  tripInfoCard: {
    padding: 20,
    borderRadius: 12,
    marginBottom: 20,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  tripTitle: {
    marginBottom: 8,
    textAlign: 'center',
  },
  tripDescription: {
    marginBottom: 16,
    textAlign: 'center',
    opacity: 0.8,
  },
  tripMeta: {
    gap: 8,
  },
  metaRow: {
    flexDirection: 'row',
    alignItems: 'center',
    gap: 8,
  },
  metaText: {
    opacity: 0.8,
  },
  section: {
    marginBottom: 24,
  },
  sectionTitle: {
    marginBottom: 12,
    fontWeight: '600',
  },
  sectionHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 12,
  },
  addButton: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingHorizontal: 12,
    paddingVertical: 8,
    borderRadius: 8,
    gap: 4,
  },
  addButtonText: {
    fontSize: 14,
    fontWeight: '600',
  },
  participantsContainer: {
    gap: 12,
  },
  participantCard: {
    padding: 16,
    borderRadius: 12,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.1,
    shadowRadius: 2,
    elevation: 2,
  },
  participantHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 12,
  },
  participantInfo: {
    flexDirection: 'row',
    alignItems: 'center',
    flex: 1,
  },
  participantAvatar: {
    width: 40,
    height: 40,
    borderRadius: 20,
    backgroundColor: '#007AFF',
    justifyContent: 'center',
    alignItems: 'center',
    marginRight: 12,
  },
  avatarText: {
    fontSize: 18,
    color: 'white',
  },
  participantDetails: {
    flex: 1,
  },
  participantName: {
    marginBottom: 4,
  },
  balanceInfo: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  balanceText: {
    fontWeight: '600',
  },
  participantActions: {
    flexDirection: 'row',
    gap: 8,
  },
  actionButton: {
    padding: 8,
    borderRadius: 6,
  },
  detailRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 4,
  },
  detailLabel: {
    opacity: 0.7,
  },
  detailValue: {
    fontWeight: '600',
  },
  expensesContainer: {
    gap: 12,
  },
  expenseCard: {
    padding: 16,
    borderRadius: 12,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.1,
    shadowRadius: 2,
    elevation: 2,
  },
  expenseHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'flex-start',
  },
  expenseInfo: {
    flex: 1,
    marginRight: 12,
  },
  expenseTitle: {
    marginBottom: 4,
  },
  expenseCategory: {
    opacity: 0.7,
  },
  expenseAmount: {
    alignItems: 'flex-end',
  },
  amountText: {
    color: '#007AFF',
  },
  expenseDescription: {
    marginTop: 8,
    opacity: 0.8,
  },
  emptyState: {
    alignItems: 'center',
    padding: 32,
    opacity: 0.6,
  },
  emptyText: {
    marginTop: 12,
    fontSize: 16,
    fontWeight: '600',
  },
  emptySubtext: {
    marginTop: 4,
    textAlign: 'center',
  },
  settlementsCard: {
    padding: 16,
    borderRadius: 12,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.1,
    shadowRadius: 2,
    elevation: 2,
  },
  settlementRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingVertical: 8,
    borderBottomWidth: 1,
    borderBottomColor: '#E5E5E7',
  },
  settlementInfo: {
    flex: 1,
  },
  settlementText: {
    marginBottom: 2,
  },
  settlementAmount: {
    color: '#FF3B30',
    fontWeight: '600',
  },
  actionsContainer: {
    flexDirection: 'row',
    gap: 12,
    marginTop: 8,
  },
  actionButtonText: {
    fontSize: 16,
    fontWeight: '600',
    marginLeft: 8,
  },
});
