import { Ionicons } from '@expo/vector-icons';
import React from 'react';
import {
    Dimensions,
    ScrollView,
    StyleSheet,
    Text,
    View
} from 'react-native';

import { ThemedText } from '@/components/ThemedText';
import { ThemedView } from '@/components/ThemedView';
import { useColorScheme } from '@/hooks/useColorScheme';
import { useAppSelector } from '@/store/hooks';
import { ุญุณุงุจ_ุงููุณุจุฉ_ุงููุฆููุฉ } from '@/utils/calculations';
import { formatAmount, ุฃููุงู_ุงููุฆุงุช, ุฃููููุงุช_ุงููุฆุงุช } from '@/utils/helpers';

const { width } = Dimensions.get('window');

export default function ุดุงุดุฉ_ุงูุชุญูููุงุช() {
  const colorScheme = useColorScheme();
  const isDark = colorScheme === 'dark';

  const { ุงูุฑุญูุงุช } = useAppSelector(state => state.ุฑุญูุงุช);
  const { ุงููุตุงุฑูู } = useAppSelector(state => state.ูุตุงุฑูู);
  const { ุงููุณุชุฎุฏููู } = useAppSelector(state => state.ูุณุชุฎุฏููู);
  const { ุงูุฅุนุฏุงุฏุงุช } = useAppSelector(state => state.ุฅุนุฏุงุฏุงุช);

  // ุญุณุงุจ ุงูุฅุญุตุงุฆูุงุช ุงูุนุงูุฉ
  const ุฅุฌูุงูู_ุงููุตุงุฑูู = ุงููุตุงุฑูู.reduce((ูุฌููุน, ูุตุฑูู) => ูุฌููุน + ูุตุฑูู.ุงููุจูุบ, 0);
  const ุนุฏุฏ_ุงูุฑุญูุงุช = ุงูุฑุญูุงุช.length;
  const ูุชูุณุท_ุงููุตุงุฑูู_ููุฑุญูุฉ = ุนุฏุฏ_ุงูุฑุญูุงุช > 0 ? ุฅุฌูุงูู_ุงููุตุงุฑูู / ุนุฏุฏ_ุงูุฑุญูุงุช : 0;

  // ุญุณุงุจ ุชูุฒูุน ุงููุฆุงุช
  const ุชูุฒูุน_ุงููุฆุงุช: { [ูุฆุฉ: string]: number } = {};
  ุงููุตุงุฑูู.forEach(ูุตุฑูู => {
    ุชูุฒูุน_ุงููุฆุงุช[ูุตุฑูู.ุงููุฆุฉ] = (ุชูุฒูุน_ุงููุฆุงุช[ูุตุฑูู.ุงููุฆุฉ] || 0) + ูุตุฑูู.ุงููุจูุบ;
  });

  // ุญุณุงุจ ุฃูุซุฑ ุงููุณุชุฎุฏููู ุฅููุงูุงู
  const ุฅููุงู_ุงููุณุชุฎุฏููู: { [ูุนุฑู: string]: number } = {};
  ุงููุตุงุฑูู.forEach(ูุตุฑูู => {
    Object.entries(ูุตุฑูู.ูุจุงูุบ_ุงูุฏูุน).forEach(([ูุนุฑู_ุงููุณุชุฎุฏู, ุงููุจูุบ]) => {
      ุฅููุงู_ุงููุณุชุฎุฏููู[ูุนุฑู_ุงููุณุชุฎุฏู] = (ุฅููุงู_ุงููุณุชุฎุฏููู[ูุนุฑู_ุงููุณุชุฎุฏู] || 0) + ุงููุจูุบ;
    });
  });

  const ุฃูุซุฑ_ุงููุณุชุฎุฏููู_ุฅููุงูุงู = Object.entries(ุฅููุงู_ุงููุณุชุฎุฏููู)
    .sort(([, ุฃ], [, ุจ]) => ุจ - ุฃ)
    .slice(0, 5);

  const ุนุฑุถ_ุจุทุงูุฉ_ุฅุญุตุงุฆูุฉ = (ุงูุนููุงู: string, ุงููููุฉ: string, ุงูุฃููููุฉ: string, ุงูููู: string) => (
    <View style={[styles.statCard, { backgroundColor: isDark ? '#2C2C2E' : '#FFFFFF' }]}>
      <View style={[styles.statIcon, { backgroundColor: ุงูููู }]}>
        <Ionicons name={ุงูุฃููููุฉ as any} size={24} color="white" />
      </View>
      <View style={styles.statContent}>
        <ThemedText type="caption" style={styles.statTitle}>
          {ุงูุนููุงู}
        </ThemedText>
        <ThemedText type="large" style={styles.statValue}>
          {ุงููููุฉ}
        </ThemedText>
      </View>
    </View>
  );

  const ุนุฑุถ_ูุฆุฉ_ูุตุฑูู = (ูุฆุฉ: string, ูุจูุบ: number) => {
    const ุงููุณุจุฉ = ุญุณุงุจ_ุงููุณุจุฉ_ุงููุฆููุฉ(ูุจูุบ, ุฅุฌูุงูู_ุงููุตุงุฑูู);
    const ุงูููู = ุฃููุงู_ุงููุฆุงุช[ูุฆุฉ as keyof typeof ุฃููุงู_ุงููุฆุงุช] || '#95A5A6';
    const ุงูุฃููููุฉ = ุฃููููุงุช_ุงููุฆุงุช[ูุฆุฉ as keyof typeof ุฃููููุงุช_ุงููุฆุงุช] || '๐';

    return (
      <View key={ูุฆุฉ} style={styles.categoryItem}>
        <View style={styles.categoryHeader}>
          <View style={styles.categoryInfo}>
            <Text style={styles.categoryIcon}>{ุงูุฃููููุฉ}</Text>
            <ThemedText type="default" style={styles.categoryName}>
              {ูุฆุฉ}
            </ThemedText>
          </View>
          <ThemedText type="defaultSemiBold" style={styles.categoryAmount}>
            {formatAmount(ูุจูุบ, ุงูุฅุนุฏุงุฏุงุช.ุงูุนููุฉ_ุงูุงูุชุฑุงุถูุฉ)}
          </ThemedText>
        </View>
        <View style={styles.progressBar}>
          <View
            style={[
              styles.progressFill,
              {
                width: `${ุงููุณุจุฉ}%`,
                backgroundColor: ุงูููู
              }
            ]}
          />
        </View>
        <ThemedText type="caption" style={styles.categoryPercentage}>
          {ุงููุณุจุฉ}%
        </ThemedText>
      </View>
    );
  };

  const ุนุฑุถ_ูุณุชุฎุฏู_ูููู = (ูุนุฑู_ุงููุณุชุฎุฏู: string, ุงููุจูุบ: number, ุงูุชุฑุชูุจ: number) => {
    const ุงููุณุชุฎุฏู = ุงููุณุชุฎุฏููู.find(ู => ู.id === ูุนุฑู_ุงููุณุชุฎุฏู);
    const ุงูุงุณู = ุงููุณุชุฎุฏู?.ุงูุงุณู || 'ูุณุชุฎุฏู ุบูุฑ ูุนุฑูู';
    const ุงููุณุจุฉ = ุญุณุงุจ_ุงููุณุจุฉ_ุงููุฆููุฉ(ุงููุจูุบ, ุฅุฌูุงูู_ุงููุตุงุฑูู);

    return (
      <View key={ูุนุฑู_ุงููุณุชุฎุฏู} style={styles.userItem}>
        <View style={styles.userRank}>
          <ThemedText type="defaultSemiBold" style={styles.rankNumber}>
            {ุงูุชุฑุชูุจ + 1}
          </ThemedText>
        </View>
        <View style={styles.userInfo}>
          <ThemedText type="default" style={styles.userName}>
            {ุงูุงุณู}
          </ThemedText>
          <ThemedText type="caption" style={styles.userPercentage}>
            {ุงููุณุจุฉ}% ูู ุฅุฌูุงูู ุงููุตุงุฑูู
          </ThemedText>
        </View>
        <ThemedText type="defaultSemiBold" style={styles.userAmount}>
          {formatAmount(ุงููุจูุบ, ุงูุฅุนุฏุงุฏุงุช.ุงูุนููุฉ_ุงูุงูุชุฑุงุถูุฉ)}
        </ThemedText>
      </View>
    );
  };

  return (
    <ThemedView style={styles.container}>
      {/* ุงูุฑุฃุณ */}
      <View style={[styles.header, { backgroundColor: isDark ? '#1C1C1E' : '#F2F2F7' }]}>
        <ThemedText type="title" style={styles.headerTitle}>
          ุงูุชุญูููุงุช ูุงูุฅุญุตุงุฆูุงุช
        </ThemedText>
      </View>

      <ScrollView
        style={styles.scrollView}
        contentContainerStyle={styles.scrollContent}
        showsVerticalScrollIndicator={false}
      >
        {/* ุงูุฅุญุตุงุฆูุงุช ุงูุนุงูุฉ */}
        <View style={styles.section}>
          <ThemedText type="subtitle" style={styles.sectionTitle}>
            ุงูุฅุญุตุงุฆูุงุช ุงูุนุงูุฉ
          </ThemedText>
          <View style={styles.statsGrid}>
            {ุนุฑุถ_ุจุทุงูุฉ_ุฅุญุตุงุฆูุฉ(
              'ุฅุฌูุงูู ุงููุตุงุฑูู',
              formatAmount(ุฅุฌูุงูู_ุงููุตุงุฑูู, ุงูุฅุนุฏุงุฏุงุช.ุงูุนููุฉ_ุงูุงูุชุฑุงุถูุฉ),
              'wallet',
              '#007AFF'
            )}
            {ุนุฑุถ_ุจุทุงูุฉ_ุฅุญุตุงุฆูุฉ(
              'ุนุฏุฏ ุงูุฑุญูุงุช',
              ุนุฏุฏ_ุงูุฑุญูุงุช.toString(),
              'airplane',
              '#34C759'
            )}
            {ุนุฑุถ_ุจุทุงูุฉ_ุฅุญุตุงุฆูุฉ(
              'ูุชูุณุท ุงููุตุงุฑูู',
              formatAmount(ูุชูุณุท_ุงููุตุงุฑูู_ููุฑุญูุฉ, ุงูุฅุนุฏุงุฏุงุช.ุงูุนููุฉ_ุงูุงูุชุฑุงุถูุฉ),
              'analytics',
              '#FF9500'
            )}
            {ุนุฑุถ_ุจุทุงูุฉ_ุฅุญุตุงุฆูุฉ(
              'ุนุฏุฏ ุงููุตุงุฑูู',
              ุงููุตุงุฑูู.length.toString(),
              'receipt',
              '#AF52DE'
            )}
          </View>
        </View>

        {/* ุชูุฒูุน ุงููุฆุงุช */}
        {Object.keys(ุชูุฒูุน_ุงููุฆุงุช).length > 0 && (
          <View style={styles.section}>
            <ThemedText type="subtitle" style={styles.sectionTitle}>
              ุชูุฒูุน ุงููุตุงุฑูู ุญุณุจ ุงููุฆุฉ
            </ThemedText>
            <View style={[styles.card, { backgroundColor: isDark ? '#2C2C2E' : '#FFFFFF' }]}>
              {Object.entries(ุชูุฒูุน_ุงููุฆุงุช)
                .sort(([, ุฃ], [, ุจ]) => ุจ - ุฃ)
                .map(([ูุฆุฉ, ูุจูุบ]) => ุนุฑุถ_ูุฆุฉ_ูุตุฑูู(ูุฆุฉ, ูุจูุบ))}
            </View>
          </View>
        )}

        {/* ุฃูุซุฑ ุงููุณุชุฎุฏููู ุฅููุงูุงู */}
        {ุฃูุซุฑ_ุงููุณุชุฎุฏููู_ุฅููุงูุงู.length > 0 && (
          <View style={styles.section}>
            <ThemedText type="subtitle" style={styles.sectionTitle}>
              ุฃูุซุฑ ุงููุณุชุฎุฏููู ุฅููุงูุงู
            </ThemedText>
            <View style={[styles.card, { backgroundColor: isDark ? '#2C2C2E' : '#FFFFFF' }]}>
              {ุฃูุซุฑ_ุงููุณุชุฎุฏููู_ุฅููุงูุงู.map(([ูุนุฑู_ุงููุณุชุฎุฏู, ุงููุจูุบ], ููุฑุณ) =>
                ุนุฑุถ_ูุณุชุฎุฏู_ูููู(ูุนุฑู_ุงููุณุชุฎุฏู, ุงููุจูุบ, ููุฑุณ)
              )}
            </View>
          </View>
        )}

        {/* ุฑุณุงูุฉ ูุงุฑุบุฉ */}
        {ุงููุตุงุฑูู.length === 0 && (
          <View style={styles.emptyState}>
            <Ionicons
              name="analytics"
              size={64}
              color={isDark ? '#666' : '#CCC'}
              style={styles.emptyIcon}
            />
            <ThemedText type="subtitle" style={styles.emptyTitle}>
              ูุง ุชูุฌุฏ ุจูุงูุงุช ููุชุญููู
            </ThemedText>
            <ThemedText type="caption" style={styles.emptyDescription}>
              ุฃุถู ุจุนุถ ุงููุตุงุฑูู ูุฑุคูุฉ ุงูุชุญูููุงุช ูุงูุฅุญุตุงุฆูุงุช
            </ThemedText>
          </View>
        )}
      </ScrollView>
    </ThemedView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  header: {
    paddingHorizontal: 20,
    paddingTop: 60,
    paddingBottom: 20,
  },
  headerTitle: {
    textAlign: 'center',
  },
  scrollView: {
    flex: 1,
  },
  scrollContent: {
    padding: 20,
  },
  section: {
    marginBottom: 24,
  },
  sectionTitle: {
    marginBottom: 16,
  },
  statsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    gap: 12,
  },
  statCard: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: 16,
    borderRadius: 12,
    width: (width - 52) / 2,
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  statIcon: {
    width: 48,
    height: 48,
    borderRadius: 24,
    justifyContent: 'center',
    alignItems: 'center',
    marginLeft: 12,
  },
  statContent: {
    flex: 1,
  },
  statTitle: {
    marginBottom: 4,
  },
  statValue: {
    fontFamily: 'Almarai-Bold',
  },
  card: {
    borderRadius: 12,
    padding: 16,
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  categoryItem: {
    marginBottom: 16,
  },
  categoryHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 8,
  },
  categoryInfo: {
    flexDirection: 'row',
    alignItems: 'center',
    flex: 1,
  },
  categoryIcon: {
    fontSize: 20,
    marginLeft: 8,
  },
  categoryName: {
    flex: 1,
  },
  categoryAmount: {
    marginRight: 8,
  },
  progressBar: {
    height: 6,
    backgroundColor: '#E5E5EA',
    borderRadius: 3,
    marginBottom: 4,
  },
  progressFill: {
    height: '100%',
    borderRadius: 3,
  },
  categoryPercentage: {
    textAlign: 'left',
  },
  userItem: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 12,
    borderBottomWidth: 1,
    borderBottomColor: '#E5E5EA',
  },
  userRank: {
    width: 32,
    height: 32,
    borderRadius: 16,
    backgroundColor: '#007AFF',
    justifyContent: 'center',
    alignItems: 'center',
    marginLeft: 12,
  },
  rankNumber: {
    color: 'white',
    fontSize: 14,
  },
  userInfo: {
    flex: 1,
  },
  userName: {
    marginBottom: 2,
  },
  userPercentage: {
    opacity: 0.7,
  },
  userAmount: {
    textAlign: 'left',
  },
  emptyState: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    paddingVertical: 60,
  },
  emptyIcon: {
    marginBottom: 16,
  },
  emptyTitle: {
    marginBottom: 8,
    textAlign: 'center',
  },
  emptyDescription: {
    textAlign: 'center',
    paddingHorizontal: 40,
  },
});
